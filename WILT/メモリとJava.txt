メモリとJava
Javaでは、プログラムの実行時に使われるメモリ領域として、主にスタック、ヒープ、静的メモリの3つがある。スタックはメソッド呼び出しやローカル変数の管理に使われており、スレッドごとに個別に割り当てられている。一方、ヒープはnewで生成されたインスタンスが格納される領域で、全スレッドで共有されている。静的メモリ領域（メソッド領域とも呼ばれる）は、クラス変数や定数、メソッド定義など、アプリケーション全体で共通して使われるデータを保持している。

加えて、Javaはマルチスレッド処理に対応しており、複数のスレッドを同時に走らせることができる。たとえば、画面の更新処理とバックグラウンドの通信処理を並列で行うといった場面で活用されている。ただし、複数のスレッドが同じオブジェクトに同時にアクセスすると、予期しない動作（デッドロックや競合）が発生する可能性がある。そのため、共有リソースにアクセスする際はsynchronizedキーワードなどを用いて排他制御を行う必要がある。安全にマルチスレッドを実装するためには、スレッド間のメモリの見え方（可視性）やロックの仕組みを理解しておくことが重要になっている。